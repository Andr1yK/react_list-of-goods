{"version":3,"sources":["App.tsx","components/GoodsList.tsx","components/Options.tsx","index.tsx"],"names":["SortBy","GoodsList","goods","extendClassName","className","map","good","Options","Array","this","props","length","_","i","value","PureComponent","goodsFromServer","App","state","isVisible","isReversed","sortBy","none","minLength","changeVisible","setState","changeReverse","changeSortBy","newSortBy","setMinLength","newMinLength","reset","preparedGoods","filter","sort","a","b","alphabet","localeCompare","reverse","type","onClick","classNames","name","id","onChange","e","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sLAmBKA,E,iGCDUC,EAVoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAkBC,EAArB,EAAUC,UAAV,OACjC,oBAAIA,UAAS,oBAAeD,GAA5B,SACGD,EAAMG,KAAI,SAAAC,GAAI,OACb,oBAAeF,UAAU,kBAAzB,SACGE,GADMA,S,OCLTC,E,4JACJ,WACE,OACE,mCACG,YAAI,IAAIC,MAAMC,KAAKC,MAAMC,SAASN,KAAI,SAACO,EAAGC,GAAJ,OACrC,wBAAQC,MAAOD,EAAI,EAAnB,SACGA,EAAI,a,GANKE,iBAcPR,IFdTS,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGhB,O,eAAAA,I,uBAAAA,I,oBAAAA,M,SAeCiB,E,4MACJC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,OAAQrB,EAAOsB,KACfC,UAAW,G,EAGbC,cAAgB,WACd,EAAKC,UAAS,SAACP,GAAD,MAAY,CAAEC,WAAYD,EAAMC,e,EAGhDO,cAAgB,WACd,EAAKD,UAAS,SAACP,GAAD,MAAY,CAAEE,YAAaF,EAAME,gB,EAGjDO,aAAe,SAACC,GACd,EAAKH,SAAS,CAAEJ,OAAQO,K,EAG1BC,aAAe,SAACC,GACd,EAAKL,SAAS,CAAEF,UAAWO,K,EAG7BC,MAAQ,WACN,EAAKN,SAAS,CACZL,YAAY,EACZC,OAAQrB,EAAOsB,KACfC,UAAW,K,4CAIf,WAAU,IAAD,OACP,EAEId,KAAKS,MADPC,EADF,EACEA,UAAWC,EADb,EACaA,WAAYC,EADzB,EACyBA,OAAQE,EADjC,EACiCA,UAG3BS,EAAgB,UAAIhB,GACvBiB,QAAO,SAAA3B,GAAI,OAAIA,EAAKK,QAAUY,KAmBjC,OAjBAS,EAAcE,MAAK,SAACC,EAAGC,GACrB,OAAQf,GACN,KAAKrB,EAAOqC,SACV,OAAOF,EAAEG,cAAcF,GAEzB,KAAKpC,EAAOW,OACV,OAAOwB,EAAExB,OAASyB,EAAEzB,OAEtB,QACE,OAAO,MAITS,GACFY,EAAcO,UAId,sBAAKnC,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,oBAEEe,GACA,wBACEf,UAAU,SACVoC,KAAK,SACLC,QAAShC,KAAKe,cAHhB,mBASDL,GACC,sBAAKf,UAAU,kBAAf,UACE,wBACEA,UAAWsC,IAAW,SAAU,CAC9B,iBAAkBtB,IAEpBoB,KAAK,SACLC,QAAShC,KAAKiB,cALhB,qBAUA,wBACEtB,UAAWsC,IAAW,SAAU,CAC9B,iBAAkBrB,IAAWrB,EAAOqC,WAEtCG,KAAK,SACLC,QAAS,kBAAM,EAAKd,aAAa3B,EAAOqC,WAL1C,iCAUA,wBACEjC,UAAWsC,IAAW,SAAU,CAC9B,iBAAkBrB,IAAWrB,EAAOW,SAEtC6B,KAAK,SACLC,QAAS,kBAAM,EAAKd,aAAa3B,EAAOW,SAL1C,4BAUA,wBACEP,UAAU,SACVuC,KAAK,YACLC,GAAG,YACH9B,MAAOS,EACPsB,SAAU,SAACC,GAAD,OAAO,EAAKjB,cAAciB,EAAEC,OAAOjC,QAL/C,SAOE,cAAC,EAAD,CAASH,OAAQ,OAGnB,wBACEP,UAAU,SACVoC,KAAK,SACLC,QAAShC,KAAKsB,MAHhB,sBAUHZ,GACC,cAAC,EAAD,CACEjB,MAAO8B,EACP5B,UAAU,qB,GA9HJ4C,IAAMC,WAsIThC,IGrKfiC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.edbe35d0.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport './App.scss';\nimport GoodsList from './components/GoodsList';\nimport Options from './components/Options';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  none,\n  alphabet,\n  length,\n}\n\ntype State = {\n  isVisible: boolean,\n  isReversed: boolean,\n  sortBy: SortBy,\n  minLength: number,\n};\n\ntype Props = {};\n\nclass App extends React.Component<Props, State> {\n  state = {\n    isVisible: false,\n    isReversed: false,\n    sortBy: SortBy.none,\n    minLength: 0,\n  };\n\n  changeVisible = () => {\n    this.setState((state) => ({ isVisible: !state.isVisible }));\n  };\n\n  changeReverse = () => {\n    this.setState((state) => ({ isReversed: !state.isReversed }));\n  };\n\n  changeSortBy = (newSortBy: SortBy) => {\n    this.setState({ sortBy: newSortBy });\n  };\n\n  setMinLength = (newMinLength: number) => {\n    this.setState({ minLength: newMinLength });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: SortBy.none,\n      minLength: 0,\n    });\n  };\n\n  render() {\n    const {\n      isVisible, isReversed, sortBy, minLength,\n    } = this.state;\n\n    const preparedGoods = [...goodsFromServer]\n      .filter(good => good.length >= minLength);\n\n    preparedGoods.sort((a, b) => {\n      switch (sortBy) {\n        case SortBy.alphabet:\n          return a.localeCompare(b);\n\n        case SortBy.length:\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      preparedGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">Goods</h1>\n\n        {!isVisible && (\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={this.changeVisible}\n          >\n            Start\n          </button>\n        )}\n\n        {isVisible && (\n          <div className=\"App__controller\">\n            <button\n              className={classNames('button', {\n                'button--active': isReversed,\n              })}\n              type=\"button\"\n              onClick={this.changeReverse}\n            >\n              Reverse\n            </button>\n\n            <button\n              className={classNames('button', {\n                'button--active': sortBy === SortBy.alphabet,\n              })}\n              type=\"button\"\n              onClick={() => this.changeSortBy(SortBy.alphabet)}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              className={classNames('button', {\n                'button--active': sortBy === SortBy.length,\n              })}\n              type=\"button\"\n              onClick={() => this.changeSortBy(SortBy.length)}\n            >\n              Sort by length\n            </button>\n\n            <select\n              className=\"button\"\n              name=\"minLength\"\n              id=\"minLength\"\n              value={minLength}\n              onChange={(e) => this.setMinLength(+e.target.value)}\n            >\n              <Options length={10} />\n            </select>\n\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          </div>\n        )}\n\n        {isVisible && (\n          <GoodsList\n            goods={preparedGoods}\n            className=\"App__list\"\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport './GoodsList.scss';\n\ntype Props = {\n  goods: string[],\n  className: string,\n};\n\nconst GoodsList: React.FC<Props> = ({ goods, className: extendClassName }) => (\n  <ul className={`goodsList ${extendClassName}`}>\n    {goods.map(good => (\n      <li key={good} className=\"goodsList__item\">\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n\nexport default GoodsList;\n","import { PureComponent } from 'react';\n\ntype Props = {\n  length: number,\n};\n\nclass Options extends PureComponent<Props> {\n  render() {\n    return (\n      <>\n        {[...new Array(this.props.length)].map((_, i) => (\n          <option value={i + 1}>\n            {i + 1}\n          </option>\n        ))}\n      </>\n    );\n  }\n}\n\nexport default Options;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}