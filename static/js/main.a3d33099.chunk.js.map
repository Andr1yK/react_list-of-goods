{"version":3,"sources":["App.tsx","components/GoodsList.tsx","index.tsx"],"names":["SortBy","GoodsList","goods","extendClassName","className","map","good","goodsFromServer","App","state","isVisible","isReversed","sortBy","none","changeVisible","setState","changeReverse","changeSortBy","newSortBy","reset","this","preparedGoods","sort","a","b","alphabet","localeCompare","length","reverse","type","onClick","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sLAkBKA,E,iGCAUC,EAVoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAkBC,EAArB,EAAUC,UAAV,OACjC,oBAAIA,UAAS,oBAAeD,GAA5B,SACGD,EAAMG,KAAI,SAAAC,GAAI,OACb,oBAAeF,UAAU,kBAAzB,SACGE,GADMA,SDNTC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGP,O,eAAAA,I,uBAAAA,I,oBAAAA,M,SAcCQ,E,4MACJC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,OAAQZ,EAAOa,M,EAGjBC,cAAgB,WACd,EAAKC,UAAS,SAACN,GAAD,MAAY,CAAEC,WAAYD,EAAMC,e,EAGhDM,cAAgB,WACd,EAAKD,UAAS,SAACN,GAAD,MAAY,CAAEE,YAAaF,EAAME,gB,EAGjDM,aAAe,SAACC,GACd,EAAKH,SAAS,CAAEH,OAAQM,K,EAG1BC,MAAQ,WACN,EAAKJ,SAAS,CACZJ,YAAY,EACZC,OAAQZ,EAAOa,Q,4CAInB,WAAU,IAAD,OACP,EAA0CO,KAAKX,MAAvCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,OAEzBS,EAAa,UAAOd,GAmB1B,OAjBAc,EAAcC,MAAK,SAACC,EAAGC,GACrB,OAAQZ,GACN,KAAKZ,EAAOyB,SACV,OAAOF,EAAEG,cAAcF,GAEzB,KAAKxB,EAAO2B,OACV,OAAOJ,EAAEI,OAASH,EAAEG,OAEtB,QACE,OAAO,MAIThB,GACFU,EAAcO,UAId,sBAAKxB,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,oBAEEM,GACA,wBACEN,UAAU,SACVyB,KAAK,SACLC,QAASV,KAAKN,cAHhB,mBASDJ,GACC,sBAAKN,UAAU,kBAAf,UACE,wBACEA,UAAW2B,IAAW,SAAU,CAC9B,iBAAkBpB,IAEpBkB,KAAK,SACLC,QAASV,KAAKJ,cALhB,qBAUA,wBACEZ,UAAW2B,IAAW,SAAU,CAC9B,iBAAkBnB,IAAWZ,EAAOyB,WAEtCI,KAAK,SACLC,QAAS,kBAAM,EAAKb,aAAajB,EAAOyB,WAL1C,iCAUA,wBACErB,UAAW2B,IAAW,SAAU,CAC9B,iBAAkBnB,IAAWZ,EAAO2B,SAEtCE,KAAK,SACLC,QAAS,kBAAM,EAAKb,aAAajB,EAAO2B,SAL1C,4BAUA,wBACEvB,UAAU,SACVyB,KAAK,SACLC,QAASV,KAAKD,MAHhB,sBAUHT,GACC,cAAC,EAAD,CACER,MAAOmB,EACPjB,UAAU,qB,GA3GJ4B,IAAMC,WAmHTzB,IEhJf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a3d33099.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport './App.scss';\nimport GoodsList from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  none,\n  alphabet,\n  length,\n}\n\ntype State = {\n  isVisible: boolean,\n  isReversed: boolean,\n  sortBy: SortBy,\n};\n\ntype Props = {};\n\nclass App extends React.Component<Props, State> {\n  state = {\n    isVisible: false,\n    isReversed: false,\n    sortBy: SortBy.none,\n  };\n\n  changeVisible = () => {\n    this.setState((state) => ({ isVisible: !state.isVisible }));\n  };\n\n  changeReverse = () => {\n    this.setState((state) => ({ isReversed: !state.isReversed }));\n  };\n\n  changeSortBy = (newSortBy: SortBy) => {\n    this.setState({ sortBy: newSortBy });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: SortBy.none,\n    });\n  };\n\n  render() {\n    const { isVisible, isReversed, sortBy } = this.state;\n\n    const preparedGoods = [...goodsFromServer];\n\n    preparedGoods.sort((a, b) => {\n      switch (sortBy) {\n        case SortBy.alphabet:\n          return a.localeCompare(b);\n\n        case SortBy.length:\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      preparedGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">Goods</h1>\n\n        {!isVisible && (\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={this.changeVisible}\n          >\n            Start\n          </button>\n        )}\n\n        {isVisible && (\n          <div className=\"App__controller\">\n            <button\n              className={classNames('button', {\n                'button--active': isReversed,\n              })}\n              type=\"button\"\n              onClick={this.changeReverse}\n            >\n              Reverse\n            </button>\n\n            <button\n              className={classNames('button', {\n                'button--active': sortBy === SortBy.alphabet,\n              })}\n              type=\"button\"\n              onClick={() => this.changeSortBy(SortBy.alphabet)}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              className={classNames('button', {\n                'button--active': sortBy === SortBy.length,\n              })}\n              type=\"button\"\n              onClick={() => this.changeSortBy(SortBy.length)}\n            >\n              Sort by length\n            </button>\n\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          </div>\n        )}\n\n        {isVisible && (\n          <GoodsList\n            goods={preparedGoods}\n            className=\"App__list\"\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport './GoodsList.scss';\n\ntype Props = {\n  goods: string[],\n  className: string,\n};\n\nconst GoodsList: React.FC<Props> = ({ goods, className: extendClassName }) => (\n  <ul className={`goodsList ${extendClassName}`}>\n    {goods.map(good => (\n      <li key={good} className=\"goodsList__item\">\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n\nexport default GoodsList;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}